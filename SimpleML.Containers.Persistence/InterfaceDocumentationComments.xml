<?xml version="1.0" encoding="utf-8" ?>
<doc>
  <assembly>
    <name>SimpleML.Containers.Persistence</name>
  </assembly>
  <members>
    <member name="T:SimpleML.Containers.Persistence.IFile">
      <summary>
        Provides an abstraction of the System.IO.File class, to facilitate mocking and unit testing.
      </summary>
    </member>
    <member name="M:SimpleML.Containers.Persistence.IFile.ReadAllLines(System.String)">
      <summary>
        Opens a text file, reads all lines of the file, and then closes the file.
      </summary>
      <param name="path">The file to open for reading.</param>
      <returns>A string array containing all lines of the file.</returns>
    </member>
    <member name="M:SimpleML.Containers.Persistence.IFile.OpenRead(System.String)">
      <summary>
       Opens an existing file for reading.
      </summary>
      <param name="path">The file to be opened for reading. </param>
      <returns>A read-only IFileStream on the specified path.</returns>
    </member>
    <member name="T:SimpleML.Containers.Persistence.IFileStream">
      <summary>
       Provides an abstraction of the System.IO.FileStream class, to facilitate mocking and unit testing.
      </summary>
    </member>
    <member name="M:SimpleML.Containers.Persistence.IFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
       Sets the current position of this stream to the given value.
      </summary>
      <param name="offset">The point relative to origin from which to begin seeking.</param>
      <param name="origin">Specifies the beginning, the end, or the current position as a reference point for offset, using a value of type SeekOrigin.</param>
      <returns>The new position in the stream.</returns>
    </member>
    <member name="M:SimpleML.Containers.Persistence.IFileStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
       Reads a block of bytes from the stream and writes the data in a given buffer.
      </summary>
      <param name="array">When this method returns, contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
      <param name="offset">The byte offset in array at which the read bytes will be placed.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</returns>
    </member>
  </members>
</doc>